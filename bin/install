#!/usr/bin/env bash

set -e
set -o pipefail

install_kubeseal() {
  local install_type=$1
  local version=$2
  local install_path=$3
  local os="$(uname | tr '[:upper:]' '[:lower:]')"
  local arch="$(uname -m | sed -e 's/x86_64/amd64/')"
  local platform="$os-$arch"
  local bin_install_path="$install_path/bin"
  local binary_path="$bin_install_path/kubeseal"
  local download_url=$(get_download_url $version $platform)

  if [ "$TMPDIR" = "" ]; then
    local tmp_download_dir=$(mktemp -d -t kubeseal_XXXXXX)
  else
    local tmp_download_dir=$TMPDIR
  fi

  local download_path="$tmp_download_dir/$(get_filename $version $platform)"

  echo "Downloading kubeseal from ${download_url} to ${download_path}"
  curl -f -Lo $download_path $download_url

  echo "Creating bin directory"
  mkdir -p "${bin_install_path}"

  echo "Cleaning previous binaries"
  rm -f $binary_path 2>/dev/null || true

  echo "Copying binary"
  case "$download_path" in
    *.tar.gz)
      tar -x -C "$tmp_download_dir" -f "$download_path" kubeseal
      cp "${tmp_download_dir}/kubeseal" ${binary_path}
      ;;
    *)
      cp "${download_path}" ${binary_path}
      ;;
  esac

  chmod +x ${binary_path}
}

get_filename() {
  local platform="$2"
  local version="$1"
  local minor_version=$(echo "$version" | sed -E 's/[0-9]+\.([0-9]+)\.[0-9]+/\1/')

  if [ "$minor_version" -le 16 ]; then
    echo "kubeseal-${platform}"
  elif [ "$version" = "0.17.0" ]; then
    local Platform="$(echo ${platform:0:1} | tr '[:lower:]' '[:upper:]')${platform:1}"
    echo "sealed-secrets_${version}_${Platform/-/_}.tar.gz"
  else
    echo "kubeseal-${version}-${platform}.tar.gz"
  fi
}

get_download_url() {
  local version="$1"
  local platform="$2"
  local filename="$(get_filename $version $platform)"

  echo "https://github.com/bitnami-labs/sealed-secrets/releases/download/v${version}/${filename}"
}

install_kubeseal $ASDF_INSTALL_TYPE $ASDF_INSTALL_VERSION $ASDF_INSTALL_PATH
